"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[924],{6475:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"This guide will walk you through fitting your first photosynthesis model using PhyTorch.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/PlantSimulationLab/phytorch/tree/main/website/docs/getting-started.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/docs/installation"},"next":{"title":"Photosynthesis Models","permalink":"/docs/models/photosynthesis"}}');var i=n(4848),r=n(8453);const l={sidebar_position:3},a="Getting Started",o={},d=[{value:"Basic Photosynthesis Model Fitting",id:"basic-photosynthesis-model-fitting",level:2},{value:"1. Import Required Modules",id:"1-import-required-modules",level:3},{value:"2. Load Your Data",id:"2-load-your-data",level:3},{value:"3. Initialize and Fit the FvCB Model",id:"3-initialize-and-fit-the-fvcb-model",level:3},{value:"4. View Results",id:"4-view-results",level:3},{value:"5. Visualize A-Ci Curves",id:"5-visualize-a-ci-curves",level:3},{value:"Stomatal Conductance Models",id:"stomatal-conductance-models",level:2},{value:"Temperature Response Options",id:"temperature-response-options",level:2},{value:"TempResp_type Options",id:"tempresp_type-options",level:3},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,i.jsx)(t.p,{children:"This guide will walk you through fitting your first photosynthesis model using PhyTorch."}),"\n",(0,i.jsx)(t.h2,{id:"basic-photosynthesis-model-fitting",children:"Basic Photosynthesis Model Fitting"}),"\n",(0,i.jsx)(t.p,{children:"Let's fit the Farquhar-von Caemmerer-Berry (FvCB) model to LI-COR A-Ci curve data."}),"\n",(0,i.jsx)(t.h3,{id:"1-import-required-modules",children:"1. Import Required Modules"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"from phytorch import *\nimport pandas as pd\nimport torch\nimport matplotlib.pyplot as plt\n"})}),"\n",(0,i.jsx)(t.h3,{id:"2-load-your-data",children:"2. Load Your Data"}),"\n",(0,i.jsx)(t.p,{children:"PhyTorch works with pandas DataFrames containing LI-COR gas exchange data:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# Load your LI-COR data (CSV format)\ndf = pd.read_csv('your_licor_data.csv')\n\n# Initialize LI-COR data object with preprocessing\nlcd = fvcb.initLicordata(df, preprocess=True)\n"})}),"\n",(0,i.jsx)(t.p,{children:"The data should contain columns for:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Ci"})," - Intercellular CO2 concentration (\u03bcmol/mol)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Photo"})," - Net photosynthesis rate (\u03bcmol/m\xb2/s)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Tleaf"})," - Leaf temperature (\xb0C)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"PARi"})," - Incident photosynthetically active radiation (\u03bcmol/m\xb2/s)"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"3-initialize-and-fit-the-fvcb-model",children:"3. Initialize and Fit the FvCB Model"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# Initialize FvCB model\n# LightResp_type: 1 = non-rectangular hyperbola, 2 = rectangular hyperbola\n# TempResp_type: 1 = Arrhenius, 2 = peaked Arrhenius\nfvcbm = fvcb.model(lcd, LightResp_type=2, TempResp_type=2)\n\n# Fit the model\nfitresult = fvcb.fit(\n    fvcbm,\n    learn_rate=0.08,      # Learning rate for optimization\n    maxiteration=20000    # Maximum iterations\n)\n"})}),"\n",(0,i.jsx)(t.h3,{id:"4-view-results",children:"4. View Results"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'# Print fitted parameters\nprint("Fitted Parameters:")\nprint(f"Vcmax25: {fitresult.params[\'Vcmax25\']:.2f} \u03bcmol/m\xb2/s")\nprint(f"Jmax25: {fitresult.params[\'Jmax25\']:.2f} \u03bcmol/m\xb2/s")\nprint(f"Rd25: {fitresult.params[\'Rd25\']:.2f} \u03bcmol/m\xb2/s")\nprint(f"Tp25: {fitresult.params[\'Tp25\']:.2f} \u03bcmol/m\xb2/s")\n\n# Get fitted values\nfitted_values = fvcbm.predict(lcd)\n'})}),"\n",(0,i.jsx)(t.h3,{id:"5-visualize-a-ci-curves",children:"5. Visualize A-Ci Curves"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# Plot observed vs predicted\nplt.figure(figsize=(10, 6))\nplt.scatter(lcd.Ci, lcd.Photo, alpha=0.6, label='Observed')\nplt.scatter(lcd.Ci, fitted_values, alpha=0.6, label='Fitted')\nplt.xlabel('Ci (\u03bcmol/mol)')\nplt.ylabel('A (\u03bcmol/m\xb2/s)')\nplt.legend()\nplt.title('FvCB Model Fit')\nplt.grid(True, alpha=0.3)\nplt.show()\n"})}),"\n",(0,i.jsx)(t.h2,{id:"stomatal-conductance-models",children:"Stomatal Conductance Models"}),"\n",(0,i.jsx)(t.p,{children:"PhyTorch supports multiple stomatal conductance models including Medlyn (MED), Ball-Woodrow-Berry (BWB), and Buckley-Mott-Farquhar (BMF)."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"from phytorch import *\nimport pandas as pd\n\n# Load your LI-COR data\ndf = pd.read_csv('your_licor_data.csv')\nlcd = stomatal.initLicordata(df, preprocess=True)\n\n# Fit Medlyn model\nmedlyn_model = stomatal.model(lcd, model_type='MED')\nmedlyn_result = stomatal.fit(medlyn_model, learn_rate=0.01, maxiteration=10000)\n\n# View fitted parameters\nprint(f\"g0: {medlyn_result.params['g0']:.4f} mol/m\xb2/s\")\nprint(f\"g1: {medlyn_result.params['g1']:.2f}\")\n\n# Fit Ball-Woodrow-Berry model\nbwb_model = stomatal.model(lcd, model_type='BWB')\nbwb_result = stomatal.fit(bwb_model, learn_rate=0.01, maxiteration=10000)\n"})}),"\n",(0,i.jsx)(t.h2,{id:"temperature-response-options",children:"Temperature Response Options"}),"\n",(0,i.jsx)(t.p,{children:"PhyTorch supports different temperature response functions:"}),"\n",(0,i.jsx)(t.h3,{id:"tempresp_type-options",children:"TempResp_type Options"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Type 1"}),": Arrhenius function"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"f(T) = f25 * exp[Ha/R * (1/298.15 - 1/Tk)]\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Type 2"}),": Peaked Arrhenius function (includes deactivation)"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"f(T) = f25 * exp[Ha/R * (1/298.15 - 1/Tk)] * [1 + exp(S*298.15 - Hd)/(R*298.15)] / [1 + exp(S*Tk - Hd)/(R*Tk)]\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# Use peaked Arrhenius for temperature-sensitive parameters\nfvcbm = fvcb.model(lcd, LightResp_type=2, TempResp_type=2)\n"})}),"\n",(0,i.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Explore different ",(0,i.jsx)(t.a,{href:"/docs/models/photosynthesis",children:"photosynthesis models"})]}),"\n",(0,i.jsxs)(t.li,{children:["Learn about ",(0,i.jsx)(t.a,{href:"/docs/models/stomatal-conductance",children:"stomatal conductance models"})]}),"\n",(0,i.jsxs)(t.li,{children:["Check out the ",(0,i.jsx)(t.a,{href:"/docs/api/",children:"API Reference"})," for detailed documentation"]}),"\n",(0,i.jsxs)(t.li,{children:["See ",(0,i.jsx)(t.a,{href:"./tutorials/index.md",children:"examples and tutorials"})," for more advanced use cases"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var s=n(6540);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);